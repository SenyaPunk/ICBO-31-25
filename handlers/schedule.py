from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from keyboards.inline import get_schedule_keyboard, get_back_button

router = Router()

# –ü—Ä–∏–º–µ—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–µ)
SCHEDULE_DATA = {
    'monday': [
        "1. 09:00-10:30 - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (–ª–µ–∫—Ü–∏—è) - –∞—É–¥. 301",
        "2. 10:45-12:15 - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø—Ä–∞–∫—Ç–∏–∫–∞) - –∞—É–¥. 205",
        "3. 12:30-14:00 - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫ - –∞—É–¥. 410"
    ],
    'tuesday': [
        "1. 09:00-10:30 - –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ª–µ–∫—Ü–∏—è) - –∞—É–¥. 302",
        "2. 10:45-12:15 - –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–ª–∞–±.) - –∞—É–¥. 206",
        "3. 12:30-14:00 - –§–∏–∑–∏—á–µ—Å–∫–∞—è –∫—É–ª—å—Ç—É—Ä–∞ - –°–ø–æ—Ä—Ç–∑–∞–ª"
    ],
    'wednesday': [
        "1. 09:00-10:30 - –ê–ª–≥–æ—Ä–∏—Ç–º—ã (–ª–µ–∫—Ü–∏—è) - –∞—É–¥. 301",
        "2. 10:45-12:15 - –ê–ª–≥–æ—Ä–∏—Ç–º—ã (–ø—Ä–∞–∫—Ç–∏–∫–∞) - –∞—É–¥. 205",
        "3. 12:30-14:00 - –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (–ª–∞–±.) - –∞—É–¥. 207"
    ],
    'thursday': [
        "1. 09:00-10:30 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (–ª–µ–∫—Ü–∏—è) - –∞—É–¥. 303",
        "2. 10:45-12:15 - –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã (–ª–∞–±.) - –∞—É–¥. 208",
    ],
    'friday': [
        "1. 09:00-10:30 - –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ (–ø—Ä–∞–∫—Ç–∏–∫–∞) - –∞—É–¥. 301",
        "2. 10:45-12:15 - –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (–ª–∞–±.) - –∞—É–¥. 205",
        "3. 12:30-14:00 - –§–∏–ª–æ—Å–æ—Ñ–∏—è (–ª–µ–∫—Ü–∏—è) - –∞—É–¥. 501"
    ],
    'saturday': [
        "–í—ã—Ö–æ–¥–Ω–æ–π! üéâ"
    ]
}


@router.message(Command("schedule"))
async def cmd_schedule(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /schedule"""
    await message.answer(
        "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</b>\n\n–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:",
        reply_markup=get_schedule_keyboard(),
        parse_mode="HTML"
    )


@router.callback_query(F.data == "schedule")
async def show_schedule_menu(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–Ω—è"""
    await callback.message.edit_text(
        "üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π</b>\n\n–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏:",
        reply_markup=get_schedule_keyboard(),
        parse_mode="HTML"
    )
    await callback.answer()


@router.callback_query(F.data.startswith("schedule_"))
async def show_day_schedule(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å"""
    day = callback.data.split("_")[1]
    
    day_names = {
        'monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
        'tuesday': '–í—Ç–æ—Ä–Ω–∏–∫',
        'wednesday': '–°—Ä–µ–¥–∞',
        'thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
        'friday': '–ü—è—Ç–Ω–∏—Ü–∞',
        'saturday': '–°—É–±–±–æ—Ç–∞'
    }
    
    schedule = SCHEDULE_DATA.get(day, ["–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π"])
    schedule_text = "\n".join(schedule)
    
    text = (
        f"üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ {day_names[day]}</b>\n\n"
        f"{schedule_text}"
    )
    
    await callback.message.edit_text(
        text,
        reply_markup=get_back_button(),
        parse_mode="HTML"
    )
    await callback.answer()

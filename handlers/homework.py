from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from keyboards.inline import get_back_button

router = Router()

# –ü—Ä–∏–º–µ—Ä –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ)
HOMEWORK_DATA = [
    {
        'subject': '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
        'task': '–†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏ ‚Ññ15-20 –∏–∑ —É—á–µ–±–Ω–∏–∫–∞',
        'deadline': '15.10.2024'
    },
    {
        'subject': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
        'task': '–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å–ª–∏—è–Ω–∏–µ–º',
        'deadline': '12.10.2024'
    },
    {
        'subject': '–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
        'task': '–°–æ–∑–¥–∞—Ç—å ER-–¥–∏–∞–≥—Ä–∞–º–º—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞',
        'deadline': '18.10.2024'
    },
    {
        'subject': '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        'task': '–°–≤–µ—Ä—Å—Ç–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ',
        'deadline': '20.10.2024'
    }
]


@router.message(Command("homework"))
async def cmd_homework(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /homework"""
    await show_homework_list(message)


@router.callback_query(F.data == "homework")
async def show_homework_callback(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π —á–µ—Ä–µ–∑ callback"""
    await show_homework_list(callback.message, is_callback=True)
    await callback.answer()


async def show_homework_list(message: Message, is_callback: bool = False):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π"""
    if not HOMEWORK_DATA:
        text = "üìö <b>–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</b>\n\n‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!"
    else:
        text = "üìö <b>–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è</b>\n\n"
        for i, hw in enumerate(HOMEWORK_DATA, 1):
            text += (
                f"{i}. <b>{hw['subject']}</b>\n"
                f"   üìù {hw['task']}\n"
                f"   üìÖ –°—Ä–æ–∫: {hw['deadline']}\n\n"
            )
    
    if is_callback:
        await message.edit_text(
            text,
            reply_markup=get_back_button(),
            parse_mode="HTML"
        )
    else:
        await message.answer(
            text,
            reply_markup=get_back_button(),
            parse_mode="HTML"
        )
